package huoltokirja.test;
// Generated by ComTest BEGIN
import huoltokirja.Pyora;
import static org.junit.Assert.*;
import org.junit.*;
import huoltokirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.20 09:52:07 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TietueTest {



  // Generated by ComTest BEGIN
  /** testInt14 */
  @Test
  public void testInt14() {    // Tietue: 14
    Pyora pyora = new Pyora(); 
    assertEquals("From: Tietue line: 17", 6, pyora.getKenttia()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testInt27 */
  @Test
  public void testInt27() {    // Tietue: 27
    Pyora pyora = new Pyora(); 
    assertEquals("From: Tietue line: 29", 1, pyora.ekaKentta()); 
    Huolto huolto = new Huolto(); 
    assertEquals("From: Tietue line: 31", 2, huolto.ekaKentta()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testInt41 */
  @Test
  public void testInt41() {    // Tietue: 41
    Pyora pyora = new Pyora(); 
    assertEquals("From: Tietue line: 43", 7, pyora.ekaIsoKentta()); 
    Huolto huolto = new Huolto(); 
    assertEquals("From: Tietue line: 45", 6, huolto.ekaIsoKentta()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testString56 */
  @Test
  public void testString56() {    // Tietue: 56
    Pyora pyora = new Pyora(); 
    assertEquals("From: Tietue line: 58", "Nimi", pyora.getKentanNimi(1)); 
    assertEquals("From: Tietue line: 59", "Merkki", pyora.getKentanNimi(2)); 
    assertEquals("From: Tietue line: 60", "Malli", pyora.getKentanNimi(3)); 
    assertEquals("From: Tietue line: 61", "Vuosimalli", pyora.getKentanNimi(4)); 
    assertEquals("From: Tietue line: 62", "Runkonumero", pyora.getKentanNimi(5)); 
    Huolto huolto = new Huolto(); 
    assertEquals("From: Tietue line: 64", "Päivämäärä", huolto.getKentanNimi(2)); 
    assertEquals("From: Tietue line: 65", "Hinta", huolto.getKentanNimi(3)); 
    assertEquals("From: Tietue line: 66", "Nimi", huolto.getKentanNimi(4)); 
    assertEquals("From: Tietue line: 67", "Ajotunnit", huolto.getKentanNimi(5)); 
    assertEquals("From: Tietue line: 68", "Toimenpiteet", huolto.getKentanNimi(6)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testString80 */
  @Test
  public void testString80() {    // Tietue: 80
    Pyora pyora = new Pyora(); 
    pyora.parse(" 3 |  Fuji Rakan  |  Fuji   | Rakan  | 2000   | abc123"); 
    assertEquals("From: Tietue line: 83", "Fuji Rakan", pyora.anna(1)); 
    assertEquals("From: Tietue line: 84", "Fuji", pyora.anna(2)); 
    assertEquals("From: Tietue line: 85", "Rakan", pyora.anna(3)); 
    assertEquals("From: Tietue line: 86", "2000", pyora.anna(4)); 
    assertEquals("From: Tietue line: 87", "abc123", pyora.anna(5)); 
    Huolto huolto = new Huolto(); 
    huolto.parse(" 2  |  2  |1.1.2020|150|  Iskari  | 100 | Öljynvaihto"); 
    assertEquals("From: Tietue line: 90", "1.1.2020", huolto.anna(2)); 
    assertEquals("From: Tietue line: 91", "150.0", huolto.anna(3)); 
    assertEquals("From: Tietue line: 92", "Iskari", huolto.anna(4)); 
    assertEquals("From: Tietue line: 93", "100", huolto.anna(5)); 
    assertEquals("From: Tietue line: 94", "Öljynvaihto", huolto.anna(6)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testString106 */
  @Test
  public void testString106() {    // Tietue: 106
    Pyora pyora = new Pyora(); 
    assertEquals("From: Tietue line: 108", null, pyora.aseta(1, "hybridi")); 
    assertEquals("From: Tietue line: 109", "hybridi", pyora.anna(1)); 
    assertEquals("From: Tietue line: 110", "vuosimalli on väärin", pyora.aseta(4, "2005s")); 
    assertEquals("From: Tietue line: 111", "0", pyora.anna(4)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTietue122 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testTietue122() throws CloneNotSupportedException {    // Tietue: 122
    Pyora pyora1 = new Pyora(); 
    pyora1.parse(" 4 |  Kottero  |  Helkama   | Jopo  | 2000   | abc123"); 
    Pyora pyora2 = pyora1.clone(); 
    assertEquals("From: Tietue line: 127", "4|Kottero|Helkama|Jopo|2000|abc123", pyora2.toString()); 
    assertEquals("From: Tietue line: 128", "4|Kottero|Helkama|Jopo|2000|abc123", pyora1.toString()); 
    pyora2.parse(" 1 |  Maastopyörä  |  Fuji   | Rakan  | 2019   | kjh543"); 
    assertEquals("From: Tietue line: 130", "4|Kottero|Helkama|Jopo|2000|abc123", pyora1.toString()); 
    assertEquals("From: Tietue line: 131", "1|Maastopyörä|Fuji|Rakan|2019|kjh543", pyora2.toString()); 
    Huolto huolto1 = new Huolto(); 
    huolto1.parse(" 2  |  2  |1.1.2020|150.00|  Iskari  | 100 | Öljynvaihto"); 
    Huolto huolto2 = huolto1.clone(); 
    assertEquals("From: Tietue line: 136", "2|2|1.1.2020|150.00|Iskari|100|Öljynvaihto", huolto2.toString()); 
    assertEquals("From: Tietue line: 137", "2|2|1.1.2020|150.00|Iskari|100|Öljynvaihto", huolto1.toString()); 
    huolto2.parse("3  |  3  |2.2.2021|15.00| Jarrupalat  | 150 | vaihto"); 
    assertEquals("From: Tietue line: 139", "2|2|1.1.2020|150.00|Iskari|100|Öljynvaihto", huolto1.toString()); 
    assertEquals("From: Tietue line: 140", "3|3|2.2.2021|15.00|Jarrupalat|150|vaihto", huolto2.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString150 */
  @Test
  public void testToString150() {    // Tietue: 150
    Pyora pyora2 = new Pyora(); 
    pyora2.parse(" 2 |  Kottero  |  Helkama   | Jopo  | 2000   | abc123"); 
    assertEquals("From: Tietue line: 153", "2|Kottero|Helkama|Jopo|2000|abc123", pyora2.toString());
  } // Generated by ComTest END
}