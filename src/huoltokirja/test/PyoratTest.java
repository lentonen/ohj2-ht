package huoltokirja.test;
// Generated by ComTest BEGIN
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
import huoltokirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.11 22:40:58 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PyoratTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa45 
   * @throws ApuException when error
   */
  @Test
  public void testLisaa45() throws ApuException {    // Pyorat: 45
    Pyorat pyorat = new Pyorat(); 
    Pyora pyora1 = new Pyora(), pyora2 = new Pyora(); Pyora pyora3 = new Pyora(); Pyora pyora4 = new Pyora(); Pyora pyora5 = new Pyora(); 
    assertEquals("From: Pyorat line: 49", 0, pyorat.getLkm()); 
    pyorat.lisaa(pyora1); assertEquals("From: Pyorat line: 50", 1, pyorat.getLkm()); 
    pyorat.lisaa(pyora2); assertEquals("From: Pyorat line: 51", 2, pyorat.getLkm()); 
    pyorat.lisaa(pyora3); assertEquals("From: Pyorat line: 52", 3, pyorat.getLkm()); 
    assertEquals("From: Pyorat line: 53", pyora1, pyorat.anna(0)); 
    assertEquals("From: Pyorat line: 54", pyora2, pyorat.anna(1)); 
    assertEquals("From: Pyorat line: 55", pyora3, pyorat.anna(2)); 
    try {
    assertEquals("From: Pyorat line: 56", pyora3, pyorat.anna(3)); 
    fail("Pyorat: 56 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    try {
    assertEquals("From: Pyorat line: 57", pyora3, pyorat.anna(-1)); 
    fail("Pyorat: 57 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    pyorat.lisaa(pyora4); assertEquals("From: Pyorat line: 58", 4, pyorat.getLkm()); 
    pyorat.lisaa(pyora5); assertEquals("From: Pyorat line: 59", 5, pyorat.getLkm()); 
    pyorat.lisaa(pyora5);  // Voidaan lisätä 6.pyörä, koska tietorakenne kasvaa
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKorvaaTaiLisaa81 */
  @Test
  public void testKorvaaTaiLisaa81() {    // Pyorat: 81
    Pyorat pyorat = new Pyorat(); 
    assertEquals("From: Pyorat line: 83", 0, pyorat.getLkm()); 
    Pyora pyora1 = new Pyora(); 
    pyora1.parse(" 1 |  Kottero  |  Helkama   | Jopo  | 2000   | abc123"); 
    pyorat.lisaa(pyora1); 
    assertEquals("From: Pyorat line: 87", 1, pyorat.getLkm()); 
    Pyora pyora2 = new Pyora(); 
    pyora2.parse(" 1 |  Hybridi  |  Tunturi   | Pappa | 1999   | abc124"); 
    pyorat.korvaaTaiLisaa(pyora2); 
    assertEquals("From: Pyorat line: 91", 1, pyorat.getLkm()); 
    assertEquals("From: Pyorat line: 92", "Hybridi", pyorat.anna(0).anna(1)); 
    Pyora pyora3 = new Pyora(); 
    pyora3.parse(" 2 |  Citypyörä  |  Trek   | City | 2010   | poi567"); 
    pyorat.korvaaTaiLisaa(pyora3); 
    assertEquals("From: Pyorat line: 96", 2, pyorat.getLkm()); 
    assertEquals("From: Pyorat line: 97", "Citypyörä", pyorat.anna(1).anna(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista118 */
  @Test
  public void testPoista118() {    // Pyorat: 118
    Pyorat pyorat = new Pyorat(); 
    assertEquals("From: Pyorat line: 120", 0, pyorat.getLkm()); 
    Pyora pyora = new Pyora(); 
    pyora.parse(" 4 |  Kottero  |  Helkama   | Jopo  | 2000   | abc123"); 
    pyorat.lisaa(pyora); 
    assertEquals("From: Pyorat line: 124", 1, pyorat.getLkm()); 
    assertEquals("From: Pyorat line: 125", 0, pyorat.poista(1));  // pyörää ei löydy
    assertEquals("From: Pyorat line: 126", 1, pyorat.poista(4));  // pyörä löytyy
    assertEquals("From: Pyorat line: 127", 0, pyorat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEtsiPaikka147 */
  @Test
  public void testEtsiPaikka147() {    // Pyorat: 147
    Pyorat pyorat = new Pyorat(); 
    Pyora pyora1 = new Pyora(); 
    Pyora pyora2 = new Pyora(); 
    assertEquals("From: Pyorat line: 151", -1, pyorat.etsiPaikka(1)); 
    pyora1.parse(" 1 |  Kottero  |  Helkama   | Jopo  | 2000   | abc123"); 
    pyora2.parse(" 2 |  Hybridi  |  Tunturi   | Pappa | 1999   | abc124"); 
    pyorat.lisaa(pyora1); pyorat.lisaa(pyora2); 
    assertEquals("From: Pyorat line: 155", 0, pyorat.etsiPaikka(1)); 
    assertEquals("From: Pyorat line: 156", 1, pyorat.etsiPaikka(2)); 
    assertEquals("From: Pyorat line: 157", -1, pyorat.etsiPaikka(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedosto220 
   * @throws ApuException when error
   */
  @Test
  public void testLueTiedosto220() throws ApuException {    // Pyorat: 220
    Pyorat pyorat = new Pyorat(); 
    Pyora pyora6 = new Pyora(); pyora6.arvoPyora(); pyora6.rekisteroi(); pyorat.lisaa(pyora6); 
    Pyora pyora7 = new Pyora(); pyora7.arvoPyora(); pyora7.rekisteroi(); pyorat.lisaa(pyora7); 
    String hakemisto = "testipyorat"; 
    String tiedNimi = hakemisto +"/pyorat.dat"; 
    File ftied = new File(tiedNimi); 
    ftied.getParentFile().mkdirs(); 
    ftied.delete(); 
    try {
    pyorat.lueTiedosto(hakemisto); 
    fail("Pyorat: 233 Did not throw ApuException");
    } catch(ApuException _e_){ _e_.getMessage(); }
    pyorat.tallenna(hakemisto); 
    pyorat = new Pyorat();  // Tehdään uusi pyorat-olio vanhan päälle
    assertEquals("From: Pyorat line: 236", 0, pyorat.getLkm());  // Uudessa ei pitäisi olla yhtäkään pyörää
    pyorat.lueTiedosto(hakemisto); 
    assertEquals("From: Pyorat line: 238", 2, pyorat.getLkm());  // Uudessa pitäisi nyt olla kaksi aiemmin lisättyä pyörää
    pyorat.anna(0).equals(pyora6); 
    pyorat.anna(1).equals(pyora7); 
    try {
    pyorat.anna(2).equals(pyora7); 
    fail("Pyorat: 241 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    assertEquals("From: Pyorat line: 242", true, ftied.delete());  // tuhoaa .dat-tiedoston
    assertEquals("From: Pyorat line: 243", true, ftied.getParentFile().delete());  // tuhoaa testikansion
  } // Generated by ComTest END
}